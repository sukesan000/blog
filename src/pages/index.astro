---
import Layout from "../layouts/Layout.astro";
const articles = await Astro.glob("../pages/articles/*.mdx");
const sortedArticles = articles.sort((a, b) => {
  const aDate = new Date(a.frontmatter.pubDate);
  const bDate = new Date(b.frontmatter.pubDate);
  return bDate.getTime() - aDate.getTime();
});
---

<Layout title="sukeの雑多ブログ">
  <main>
    <header>
      <h3><a class="title" href="/">sukeの雑多ブログ</a></h3>
    </header>
    <p>当ブログは、日々の出来事や、技術的なことを書いていくブログです。</p>
    <!--コンテンツエリア -->
    <div class="content-area">
      <ul class="vertical-list">
        {
          sortedArticles.map((post) => (
            <li class="list-item">
              <time
                class="date"
                datetime={post.frontmatter.pubDate.slice(0, 10)}
              >
                {post.frontmatter.pubDate.slice(0, 10)}
              </time>
              <div class="title">
                <a href={post.url}>{post.frontmatter.title}</a>
              </div>
            </li>
          ))
        }
      </ul>
    </div>
  </main>

  <style>
    main {
      margin: auto;
      padding: 1rem;
      width: 800px;
      max-width: calc(100% - 2rem);
      color: white;
      font-size: 20px;
      line-height: 1.6;
    }
    .astro-a {
      position: absolute;
      top: -32px;
      left: 50%;
      transform: translatex(-50%);
      width: 220px;
      height: auto;
      z-index: -1;
    }
    header {
      margin-bottom: 5rem;
    }
    h1 {
      font-size: 4rem;
      font-weight: 700;
      line-height: 1;
      text-align: center;
      margin-bottom: 1em;
    }
    .vertical-list {
      list-style: none;
      padding: 0;
    }
    .list-item {
      display: flex;
      flex-direction: column;
      margin-bottom: 1rem;
    }
    .date {
      font-size: 1rem;
      color: rgb(156, 163, 175);
    }
    .text-gradient {
      background-image: var(--accent-gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-size: 400%;
      background-position: 0%;
    }
    .instructions {
      margin-bottom: 2rem;
      border: 1px solid rgba(var(--accent-light), 25%);
      background: linear-gradient(
        rgba(var(--accent-dark), 66%),
        rgba(var(--accent-dark), 33%)
      );
      padding: 1.5rem;
      border-radius: 8px;
    }
    .instructions code {
      font-size: 0.8em;
      font-weight: bold;
      background: rgba(var(--accent-light), 12%);
      color: rgb(var(--accent-light));
      border-radius: 4px;
      padding: 0.3em 0.4em;
    }
    .instructions strong {
      color: rgb(var(--accent-light));
    }
    .link-card-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
      gap: 2rem;
      padding: 0;
    }
  </style>
</Layout>
